# Author
# Adarsh Gupta 
from threading import Thread
from queue import Queue
import os
 
# dedicated file writing task
def file_writer(filepath, queue):
    # open the file
    with open(filepath, 'w') as file:
        # run until the event is set
        while True:
            # get a line of text from the queue
            line = queue.get()
            # check if we are done
            if line is None:
                # exit the loop
                break
            # write it to file
            file.write(line)
            # flush the buffer
            file.flush()
            # mark the unit of work complete
            queue.task_done()
    # mark the exit signal as processed, after the file was closed
    os.rename("temp.txt","Astrix.txt")
    queue.task_done()
 
# task for worker threads
def task(number, queue):
    
    fh_r = open("Astrix.txt", "r")
    index = input("Enter the index no to Search:")
    s =' '
    while(s):
        s=fh_r.readline()
        if len(s)>0:
            if s[0:-1]==index:
                i_d = index
                Name="Name = "+input("Enter a Name")
                Emp_id="Emp_id = "+input("Enter a Emp_id")
                Role="Role = "+input("Enter a Role")
                contact="contact = "+input("Enter a contact")
                queue.put(i_d+"\n"+Name+"\n"+Emp_id+"\n"+Role+"\n"+contact+"\n")
            else:
                if s[0:-1]=="announce-holdtime=5":
                    queue.put('')
                else:
                    queue.put(s)

    fh_r.close()
    os.remove("Astrix.txt")

 
# create the shared queue
queue = Queue()
# defile the shared file path
filepath = 'temp.txt'
# create and start the file writer thread
writer_thread = Thread(target=file_writer, args=(filepath,queue), daemon=True)
writer_thread.start()
# configure worker threads
threads = [Thread(target=task, args=(i,queue)) for i in range(1)]
# start threads
for thread in threads:
    thread.start()
# wait for threads to finish
for thread in threads:
    thread.join()
# signal the file writer thread that we are done
queue.put(None)
# wait for all tasks in the queue to be processed
queue.join()
